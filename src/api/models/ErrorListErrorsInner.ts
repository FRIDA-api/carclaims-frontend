/* tslint:disable */
/* eslint-disable */
/**
 * FRIDA Car Claims Data Schema
 * Die FRIDA Schaden API - ermöglicht es Nutzer:innen im Schadenfall die wichtigsten Versicherungs- und Unfalldaten über eine Schadenplattform direkt an den Versicherer zu übertragen und den Schaden damit offiziel zu melden.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: floneuss99@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ErrorListErrorsInner
 */
export interface ErrorListErrorsInner {
    /**
     * The code of the error
     * @type {string}
     * @memberof ErrorListErrorsInner
     */
    code: string;
    /**
     * A displayable title of the error type
     * @type {string}
     * @memberof ErrorListErrorsInner
     */
    title: string;
    /**
     * Detail of the error
     * @type {string}
     * @memberof ErrorListErrorsInner
     */
    detail: string;
    /**
     * Optional additional data for specific error types
     * @type {object}
     * @memberof ErrorListErrorsInner
     */
    meta?: object;
}

/**
 * Check if a given object implements the ErrorListErrorsInner interface.
 */
export function instanceOfErrorListErrorsInner(value: object): value is ErrorListErrorsInner {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('detail' in value) || value['detail'] === undefined) return false;
    return true;
}

export function ErrorListErrorsInnerFromJSON(json: any): ErrorListErrorsInner {
    return ErrorListErrorsInnerFromJSONTyped(json, false);
}

export function ErrorListErrorsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorListErrorsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'],
        'title': json['title'],
        'detail': json['detail'],
        'meta': json['meta'] == null ? undefined : json['meta'],
    };
}

export function ErrorListErrorsInnerToJSON(value?: ErrorListErrorsInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'code': value['code'],
        'title': value['title'],
        'detail': value['detail'],
        'meta': value['meta'],
    };
}

